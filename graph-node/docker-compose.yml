version: "3"
services:
  reader:
    image: "fireaelf"
    command:
      - "--config-file"
      - ""
      - "start"
      - "reader-node"
      - "--common-one-block-store-url"
      - "file:///data/one-blocks"
      - "--reader-node-path"
      - "AElf.Launcher"
      - "--reader-node-arguments"
      - "--data-directory /data/node"
    ports:
      - "18000:8000"
    volumes:
      - "./fireaelf-data:/data"
      - "./Logs:/app/Logs"
      - "./start-aelf-node:/app/AElf.Launcher"
      - "./appsettings.json:/app/appsettings.json"
      - "./appsettings.MainChain.MainNet.json:/app/appsettings.MainChain.MainNet.json"

  merger:
    image: "fireaelf"
    command:
      - "--config-file"
      - ""
      - "start"
      - "merger"
      - "--common-one-block-store-url"
      - "file:///data/one-blocks"
      - "--common-merged-blocks-store-url"
      - "file:///data/merged-blocks"
      - "--common-forked-blocks-store-url"
      - "file:///data/forked-blocks"
    volumes:
      - "./fireaelf-data:/data"

  relayer:
    image: "fireaelf"
    depends_on:
      - reader
    command:
      - "--config-file"
      - ""
      - "start"
      - "relayer"
      - "--common-one-block-store-url"
      - "file:///data/one-blocks"
      - "--relayer-source"
      - "reader:10010"
    volumes:
      - "./fireaelf-data:/data"

  firehose:
    image: "fireaelf"
    depends_on:
      - relayer
    command:
      - "--config-file"
      - ""
      - "start"
      - "firehose,substreams-tier1,substreams-tier2"
      - "--common-live-blocks-addr"
      - "--common-first-streamable-block=1"
      - "--substreams-state-bundle-size=10"
      - "--common-one-block-store-url"
      - "file:///data/one-blocks"
      - "--common-merged-blocks-store-url"
      - "file:///data/merged-blocks"
      - "--common-forked-blocks-store-url"
      - "file:///data/forked-blocks"
      - "--common-live-blocks-addr"
      - "relayer:10014"
      - "--advertise-chain-name"
      - "aelf"
      - "--advertise-block-id-encoding"
      - "hex"
    ports:
      - "10015:10015"
      - "10016:10016"
    volumes:
      - "./fireaelf-data:/data"
  graph-node:
    container_name: graph-node
    image: graphprotocol/graph-node:canary-substreams-index-module-e532c3135
    ports:
      - '8000:8000'
      - '8001:8001'
      - '8020:8020'
      - '8030:8030'
      - '8040:8040'
    depends_on:
      - ipfs
      - postgres
      - firehose
    extra_hosts:
      - host.docker.internal:host-gateway
    environment:
      GRAPH_NODE_CONFIG: /etc/graph-node/config.toml
      SUBSTREAMS_ENDPOINT: $SUBSTREAMS_ENDPOINT
      SUBSTREAMS_API_TOKEN: $SUBSTREAMS_API_TOKEN
      postgres_host: postgres
      postgres_user: graph-node
      postgres_pass: let-me-in
      postgres_db: graph-node
      ipfs: 'ipfs:5001'
      ethereum: 'mainnet:http://host.docker.internal:8545'
      GRAPH_LOG: info
    volumes:
      - ./config.toml:/etc/graph-node/config.toml:Z
    command: 
      - /bin/sh
      - -c
      - |
        sleep 10
        start
  ipfs:
    container_name: ipfs-gn
    image: ipfs/kubo:v0.14.0
    ports:
      - "5001:5001"
      - "5002:8080"
    volumes:
      - ./data/ipfs:/data/ipfs
      - ./data/ipfs-export:/export
  postgres:
    container_name: postgres-gn
    image: postgres:14
    ports:
      - "5432:5432"
    command: ["postgres", "-cshared_preload_libraries=pg_stat_statements"]
    #command: ["postgres", "-cshared_preload_libraries=pg_stat_statements", "-clog_statement=all"]
    environment:
      POSTGRES_USER: graph-node
      POSTGRES_PASSWORD: let-me-in
      POSTGRES_DB: graph-node
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=C"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "5432"]
      interval: 30s
      timeout: 10s
      retries: 15
  pgweb:
    container_name: pgweb-gn
    image: sosedoff/pgweb:0.11.12
    restart: on-failure
    ports:
      - "18081:8081"
    command: ["pgweb", "--bind=0.0.0.0", "--listen=8081", "--binary-codec=hex"]
    #command: ["pgweb", "--binary-codec=base58"]
    #command: ["pgweb", "--binary-codec=base64"]
    links:
      - postgres:postgres
    environment:
      - DATABASE_URL=postgres://graph-node:let-me-in@postgres:5432/graph-node?sslmode=disable
    depends_on:
      - postgres

